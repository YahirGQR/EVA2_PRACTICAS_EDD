/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eva2_6_arbol_binario;

/**
 *
 * @author moviles
 */
public class ArbolBinario {
    
    private Nodo root;

    public ArbolBinario(Nodo root) {
        this.root = null;
    }
    
    // método publico para el usuario
    public void agregar(int valor){
        
        // 1.- QUE EL NODO RECIBIDO ES NULL
        // Arbol vacío 
        if(root == null)
            root = new Nodo(valor);
        else
            agregarRecur(valor, root);
        
    }
    
    // método recursivo agregar
    // necesita el valor y el nodo actual
    private void agregarRecur(int valor, Nodo nodoActual){
         
        // 2.- DECIDIR SI VA A IZQUIERDA O DERECHA 
        /*
           Verificar el lado (nodo) es null
            si es null, ahí va el valor
           si no
            repetir recursión
        */
        
        Nodo nuevo = new Nodo(valor);
        
        if(valor < nodoActual.getValor()){ // va a la izquierda
            
            if(nodoActual.getIzquierda() == null)
                nodoActual.setIzquierda(nuevo);
            else
                agregarRecur(valor, nodoActual.getIzquierda());
            
        }else if(valor > nodoActual.getValor()){ // va a la derecha
            
            if(nodoActual.getDerecha()== null)
                nodoActual.setDerecha(nuevo);
            else
                agregarRecur(valor, nodoActual.getDerecha());
            
        }else{ // IGUAL
            System.out.println("ELEMENTO REPETIDO!!");
        }
    }
    
    // IMPRESION DE VALORES:
    // IN ORDER
    // izq valor der
    // método público
    public void inOrder(){
        
        inOrderRecu(root);
        System.out.println("");
        
    }
    // método privado recursivo
    private void inOrderRecu(Nodo nodo){
        if(nodo != null){
            inOrderRecu(nodo.getIzquierda());
            System.out.print(nodo.getValor() + " - ");
            inOrderRecu(nodo.getDerecha());
        }
    }
    
}
